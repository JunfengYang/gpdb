CREATE OR REPLACE FUNCTION gp_workfile_mgr_test_on_master(testname text, numworkfiles int)
RETURNS setof bool
LANGUAGE C VOLATILE EXECUTE ON MASTER AS '@abs_builddir@/regress@DLSUFFIX@', 'gp_workfile_mgr_test_harness';

CREATE OR REPLACE FUNCTION gp_workfile_mgr_test_on_segments(testname text, numworkfiles int)
RETURNS setof bool
LANGUAGE C VOLATILE EXECUTE ON ALL SEGMENTS AS '@abs_builddir@/regress@DLSUFFIX@', 'gp_workfile_mgr_test_harness';

CREATE FUNCTION gp_workfile_mgr_test(testname text, numworkfiles int)
RETURNS SETOF BOOL
AS
$$
	SELECT C.* FROM gp_workfile_mgr_test_on_master($1, $2) as C
	UNION ALL
	SELECT C.* FROM gp_workfile_mgr_test_on_segments($1, $2) as C;
$$
LANGUAGE SQL;

-- setup for workfile made in temp tablespace test
\! mkdir -p '@testtablespace@/workfile_mgr';
CREATE TABLESPACE ts1 LOCATION '@testtablespace@/workfile_mgr';

SELECT gp_workfile_mgr_test('workfile_made_in_temp_tablespace', 2000);

DROP TABLESPACE ts1;

SELECT gp_workfile_mgr_test('fd_tests', 2000);

SET client_min_messages = ERROR;
SELECT gp_workfile_mgr_test('workfile_create_and_set_cleanup', 2000);
RESET client_min_messages;

SELECT gp_workfile_mgr_test('workfile_create_and_individual_cleanup', 2000);

SELECT gp_workfile_mgr_test('workfile_create_and_individual_cleanup_with_pinned_workfile_set', 2000);